#!/bin/bash

# V√©rification rapide de la configuration Docker

echo "üîç V√©rification rapide de la configuration Docker..."
echo "=================================================="

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# V√©rifier le Dockerfile principal
echo ""
echo "üìÅ V√©rification du Dockerfile principal :"

if grep -q "setup_20.x" Dockerfile; then
    echo -e "${GREEN}‚úÖ Node.js 20 est configur√© dans Dockerfile${NC}"
else
    echo -e "${RED}‚ùå Node.js 20 n'est PAS configur√© dans Dockerfile${NC}"
fi

if grep -q "npm install -g npm@latest" Dockerfile; then
    echo -e "${YELLOW}‚ö†Ô∏è Mise √† jour npm d√©tect√©e (peut causer des conflits)${NC}"
else
    echo -e "${GREEN}‚úÖ Pas de mise √† jour npm forc√©e (bon)${NC}"
fi

# V√©rifier Dockerfile.robust
echo ""
echo "üõ°Ô∏è V√©rification du Dockerfile.robust :"

if [ -f "Dockerfile.robust" ]; then
    echo -e "${GREEN}‚úÖ Dockerfile.robust existe${NC}"
    
    if grep -q "setup_20.x" Dockerfile.robust; then
        echo -e "${GREEN}‚úÖ Node.js 20 configur√© dans Dockerfile.robust${NC}"
    else
        echo -e "${RED}‚ùå Node.js 20 non configur√© dans Dockerfile.robust${NC}"
    fi
    
    if grep -q "apt-get clean" Dockerfile.robust; then
        echo -e "${GREEN}‚úÖ Nettoyage automatique configur√©${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Nettoyage automatique non configur√©${NC}"
    fi
else
    echo -e "${RED}‚ùå Dockerfile.robust manquant${NC}"
fi

# V√©rifier le render.yaml
echo ""
echo "üìã V√©rification du render.yaml :"

if grep -q "dockerfilePath: ./Dockerfile.robust" render.yaml; then
    echo -e "${GREEN}‚úÖ render.yaml utilise Dockerfile.robust${NC}"
elif grep -q "dockerfilePath: ./Dockerfile" render.yaml; then
    echo -e "${YELLOW}‚ö†Ô∏è render.yaml utilise Dockerfile principal${NC}"
else
    echo -e "${RED}‚ùå dockerfilePath non configur√© dans render.yaml${NC}"
fi

# V√©rifier package.json
echo ""
echo "üì¶ V√©rification du package.json :"

if [ -f "package.json" ]; then
    echo -e "${GREEN}‚úÖ package.json existe${NC}"
    if grep -q "build" package.json; then
        echo -e "${GREEN}‚úÖ Script build trouv√© dans package.json${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Script build non trouv√© dans package.json${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è package.json n'existe pas${NC}"
fi

# V√©rifier les fichiers de configuration
echo ""
echo "‚öôÔ∏è V√©rification des fichiers de configuration :"

files=("docker/nginx.conf" "docker/supervisord.conf" "docker/start.sh")
for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file existe${NC}"
    else
        echo -e "${RED}‚ùå $file manquant${NC}"
    fi
done

# V√©rifier les guides de d√©pannage
echo ""
echo "üìö V√©rification de la documentation :"

docs=("NODEJS_TROUBLESHOOTING.md" "TROUBLESHOOTING.md" "DEPLOYMENT_STRATEGIES.md")
for doc in "${docs[@]}"; do
    if [ -f "$doc" ]; then
        echo -e "${GREEN}‚úÖ $doc existe${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è $doc manquant${NC}"
    fi
done

echo ""
echo "üéØ R√©sum√© :"
echo "Si tous les √©l√©ments sont ‚úÖ verts, votre configuration est pr√™te !"
echo "Si vous voyez des ‚ùå rouges, corrigez-les avant le d√©ploiement."
echo "Si vous voyez des ‚ö†Ô∏è jaunes, consid√©rez les am√©liorations sugg√©r√©es."
echo ""
echo "üöÄ Prochaines √©tapes :"
echo "1. git add . && git commit -m 'Fix: Migration vers Node.js 20 et Dockerfile.robust'"
echo "2. git push origin main"
echo "3. Red√©ployer sur Render"
echo ""
echo "üí° Recommandation : Utilisez Dockerfile.robust pour une installation stable de Node.js 20" 