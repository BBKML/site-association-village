#!/bin/bash

# Script de v√©rification pr√©-d√©ploiement Laravel sur Render

echo "üîç V√©rification de la configuration de d√©ploiement..."
echo "=================================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fonction pour v√©rifier un fichier
check_file() {
    if [ -f "$1" ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $1 (manquant)${NC}"
        return 1
    fi
}

# Fonction pour v√©rifier un dossier
check_dir() {
    if [ -d "$1" ]; then
        echo -e "${GREEN}‚úÖ $1${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $1 (manquant)${NC}"
        return 1
    fi
}

# Compteurs
total_checks=0
passed_checks=0

echo ""
echo "üìÅ Fichiers de configuration Docker :"
echo "-------------------------------------"

((total_checks++))
if check_file "Dockerfile"; then ((passed_checks++)); fi

((total_checks++))
if check_file "render.yaml"; then ((passed_checks++)); fi

((total_checks++))
if check_file ".renderignore"; then ((passed_checks++)); fi

echo ""
echo "üìÇ Dossier docker et configurations :"
echo "-------------------------------------"

((total_checks++))
if check_dir "docker"; then ((passed_checks++)); fi

((total_checks++))
if check_file "docker/nginx.conf"; then ((passed_checks++)); fi

((total_checks++))
if check_file "docker/supervisord.conf"; then ((passed_checks++)); fi

((total_checks++))
if check_file "docker/start.sh"; then ((passed_checks++)); fi

echo ""
echo "üîß Configuration Laravel :"
echo "-------------------------"

((total_checks++))
if check_file "composer.json"; then ((passed_checks++)); fi

((total_checks++))
if check_file "artisan"; then ((passed_checks++)); fi

((total_checks++))
if check_dir "config"; then ((passed_checks++)); fi

((total_checks++))
if check_dir "database/migrations"; then ((passed_checks++)); fi

((total_checks++))
if check_dir "public"; then ((passed_checks++)); fi

((total_checks++))
if check_file "public/index.php"; then ((passed_checks++)); fi

echo ""
echo "üìã Documentation :"
echo "-----------------"

((total_checks++))
if check_file "DEPLOYMENT_GUIDE.md"; then ((passed_checks++)); fi

echo ""
echo "üîí S√©curit√© :"
echo "-------------"

# V√©rifier que .env n'est pas commit√©
if [ -f ".env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  .env existe (assurez-vous qu'il n'est pas commit√©)${NC}"
else
    echo -e "${GREEN}‚úÖ .env n'existe pas (bon pour la s√©curit√©)${NC}"
    ((passed_checks++))
fi
((total_checks++))

# V√©rifier les permissions
echo ""
echo "üìä R√©sum√© :"
echo "-----------"
echo -e "Total des v√©rifications : ${total_checks}"
echo -e "V√©rifications r√©ussies : ${GREEN}${passed_checks}${NC}"
echo -e "V√©rifications √©chou√©es : ${RED}$((total_checks - passed_checks))${NC}"

if [ $passed_checks -eq $total_checks ]; then
    echo ""
    echo -e "${GREEN}üéâ Toutes les v√©rifications sont pass√©es !${NC}"
    echo -e "${GREEN}Votre application est pr√™te pour le d√©ploiement sur Render.${NC}"
    echo ""
    echo "üìù Prochaines √©tapes :"
    echo "1. Poussez votre code sur GitHub/GitLab"
    echo "2. Cr√©ez un compte sur Render.com"
    echo "3. Connectez votre d√©p√¥t"
    echo "4. Configurez les variables d'environnement"
    echo "5. D√©ployez !"
else
    echo ""
    echo -e "${RED}‚ùå Certaines v√©rifications ont √©chou√©.${NC}"
    echo "Veuillez corriger les probl√®mes avant le d√©ploiement."
fi

echo ""
echo "üìñ Consultez DEPLOYMENT_GUIDE.md pour plus d'informations." 